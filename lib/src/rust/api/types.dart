// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.7.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'types.freezed.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `clone`, `clone`, `fmt`, `fmt`, `fmt`

class Action {
  final String actionId;
  final String name;
  final String payload;

  const Action({
    required this.actionId,
    required this.name,
    required this.payload,
  });

  @override
  int get hashCode => actionId.hashCode ^ name.hashCode ^ payload.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Action &&
          runtimeType == other.runtimeType &&
          actionId == other.actionId &&
          name == other.name &&
          payload == other.payload;
}

class BytebeamPayload {
  final String stream;
  final int sequence;
  final BigInt timestamp;
  final Map<String, FieldValue> payload;

  const BytebeamPayload({
    required this.stream,
    required this.sequence,
    required this.timestamp,
    required this.payload,
  });

  @override
  int get hashCode =>
      stream.hashCode ^
      sequence.hashCode ^
      timestamp.hashCode ^
      payload.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is BytebeamPayload &&
          runtimeType == other.runtimeType &&
          stream == other.stream &&
          sequence == other.sequence &&
          timestamp == other.timestamp &&
          payload == other.payload;
}

@freezed
sealed class FieldValue with _$FieldValue {
  const FieldValue._();

  const factory FieldValue.null_() = FieldValue_Null;
  const factory FieldValue.string(
    String field0,
  ) = FieldValue_String;
  const factory FieldValue.int(
    PlatformInt64 field0,
  ) = FieldValue_Int;
  const factory FieldValue.bool(
    bool field0,
  ) = FieldValue_Bool;
  const factory FieldValue.float(
    double field0,
  ) = FieldValue_Float;
  const factory FieldValue.array(
    List<FieldValue> field0,
  ) = FieldValue_Array;
}
